{"ast":null,"code":"/**\n * Describes a bezier curve\n */\nclass BezierCurve {\n  /**\n   * Construct a new bezier curve\n   *\n   * @param {string} color\n   * @param {Point} start\n   * @param {Point} cp1\n   * @param {Point} cp2\n   * @param {Point} end\n   */\n  constructor(color, start, cp1, cp2, end) {\n    const {\n      x: xStart,\n      y: yStart\n    } = start;\n    const {\n      x: cp1x,\n      y: cp1y\n    } = cp1;\n    const {\n      x: cp2x,\n      y: cp2y\n    } = cp2;\n    const {\n      x: xEnd,\n      y: yEnd\n    } = end;\n    this.color = color;\n    this.xStart = xStart;\n    this.yStart = yStart;\n    this.cp1x = cp1x;\n    this.cp1y = cp1y;\n    this.cp2x = cp2x;\n    this.cp2y = cp2y;\n    this.xEnd = xEnd;\n    this.yEnd = yEnd;\n  }\n  /**\n   * Draw the bezier curve\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.moveTo(this.xStart, this.yStart);\n    ctx.strokeStyle = this.color;\n    ctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.xEnd, this.yEnd);\n    ctx.stroke();\n  }\n\n}\n\nexport default BezierCurve;","map":{"version":3,"mappings":"AAEA;;;AAGA,MAAMA,WAAN,CAAiB;EAsBf;;;;;;;;;EASAC,YACIC,KADJ,EAEIC,KAFJ,EAGIC,GAHJ,EAIIC,GAJJ,EAKIC,GALJ,EAKc;IAEZ,MAAM;MAACC,CAAC,EAAEC,MAAJ;MAAYC,CAAC,EAAEC;IAAf,IAAyBP,KAA/B;IACA,MAAM;MAACI,CAAC,EAAEI,IAAJ;MAAUF,CAAC,EAAEG;IAAb,IAAqBR,GAA3B;IACA,MAAM;MAACG,CAAC,EAAEM,IAAJ;MAAUJ,CAAC,EAAEK;IAAb,IAAqBT,GAA3B;IACA,MAAM;MAACE,CAAC,EAAEQ,IAAJ;MAAUN,CAAC,EAAEO;IAAb,IAAqBV,GAA3B;IAEA,KAAKJ,KAAL,GAAaA,KAAb;IACA,KAAKM,MAAL,GAAcA,MAAd;IACA,KAAKE,MAAL,GAAcA,MAAd;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACD;EAED;;;;;;;EAKAC,IAAI,CAACC,GAAD,EAA8B;IAChCA,GAAG,CAACC,SAAJ;IACAD,GAAG,CAACE,MAAJ,CAAW,KAAKZ,MAAhB,EAAwB,KAAKE,MAA7B;IACAQ,GAAG,CAACG,WAAJ,GAAkB,KAAKnB,KAAvB;IACAgB,GAAG,CAACI,aAAJ,CACI,KAAKX,IADT,EAEI,KAAKC,IAFT,EAGI,KAAKC,IAHT,EAII,KAAKC,IAJT,EAKI,KAAKC,IALT,EAMI,KAAKC,IANT;IAQAE,GAAG,CAACK,MAAJ;EACD;;AAxEc;;AA4EjB,eAAevB,WAAf","names":["BezierCurve","constructor","color","start","cp1","cp2","end","x","xStart","y","yStart","cp1x","cp1y","cp2x","cp2y","xEnd","yEnd","draw","ctx","beginPath","moveTo","strokeStyle","bezierCurveTo","stroke"],"sources":["/home/denilson/node_modules/binary-tree-visualizer/src/strokes/BezierCurve.ts"],"sourcesContent":["import {Point} from '../types/Point';\n\n/**\n * Describes a bezier curve\n */\nclass BezierCurve {\n  /**\n   * X Configurations\n   */\n  xStart: number\n  cp1x: number\n  cp2x: number\n  xEnd: number\n\n  /**\n   * Y Configurations\n   */\n  yStart: number\n  cp1y: number\n  cp2y: number\n  yEnd: number\n\n  /**\n   * Color of the curve\n   */\n  color: string\n\n  /**\n   * Construct a new bezier curve\n   *\n   * @param {string} color\n   * @param {Point} start\n   * @param {Point} cp1\n   * @param {Point} cp2\n   * @param {Point} end\n   */\n  constructor(\n      color: string,\n      start: Point,\n      cp1: Point,\n      cp2: Point,\n      end: Point,\n  ) {\n    const {x: xStart, y: yStart} = start;\n    const {x: cp1x, y: cp1y} = cp1;\n    const {x: cp2x, y: cp2y} = cp2;\n    const {x: xEnd, y: yEnd} = end;\n\n    this.color = color;\n    this.xStart = xStart;\n    this.yStart = yStart;\n    this.cp1x = cp1x;\n    this.cp1y = cp1y;\n    this.cp2x = cp2x;\n    this.cp2y = cp2y;\n    this.xEnd = xEnd;\n    this.yEnd = yEnd;\n  }\n\n  /**\n   * Draw the bezier curve\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.moveTo(this.xStart, this.yStart);\n    ctx.strokeStyle = this.color;\n    ctx.bezierCurveTo(\n        this.cp1x,\n        this.cp1y,\n        this.cp2x,\n        this.cp2y,\n        this.xEnd,\n        this.yEnd,\n    );\n    ctx.stroke();\n  }\n}\n\n\nexport default BezierCurve;\n"]},"metadata":{},"sourceType":"module"}